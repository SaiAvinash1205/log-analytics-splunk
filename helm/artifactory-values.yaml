installerInfo: '{ "productId": "Helm_splunk_artifactory/{{ .Chart.Version }}", "features": [ { "featureId": "ArtifactoryVersion/{{ default .Chart.AppVersion .Values.artifactory.image.version }}" }, { "featureId": "{{ if .Values.postgresql.enabled }}postgresql{{ else }}{{ .Values.database.type }}{{ end }}/0.0.0" }, { "featureId": "Platform/{{ default "kubernetes" .Values.installer.platform }}" },  { "featureId": "Channel/Helm_splunk_artifactory" } ] }'
artifactory:
  customInitContainersBegin: |
    - name: "prepare-fluentd-conf-on-persistent-volume"
      image: "{{ .Values.initContainerImage }}"
      imagePullPolicy: "{{ .Values.artifactory.image.pullPolicy }}"
      command:
        - 'sh'
        - '-c'
        - >
          mkdir -p {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/;
          curl https://raw.githubusercontent.com/jfrog/log-analytics-splunk/master/fluent.conf.rt -o {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf;
          cp {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf  {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/HEC_HOST/{{ .Values.splunk.host }}/g' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/HEC_PORT/{{ .Values.splunk.port }}/g' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/METRICS_HEC_TOKEN/{{ .Values.splunk.metrics_token }}/' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/HEC_TOKEN/{{ .Values.splunk.token }}/' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/COM_PROTOCOL/{{ .Values.splunk.com_protocol }}/g' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/INSECURE_SSL/{{ .Values.splunk.insecure_ssl }}/g' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's|JPD_URL|{{ .Values.jfrog.observability.metrics.jpd_url }}|g' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/ADMIN_USERNAME/{{ .Values.jfrog.observability.metrics.username }}/' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          sed -i -e 's/API_KEY/{{ .Values.jfrog.observability.metrics.apikey }}/' {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf;
          mv {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluent.tmp.conf {{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf;
      volumeMounts:
        - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
          name: artifactory-volume
  customSidecarContainers: |
    - name: "artifactory-fluentd-sidecar"
      image: "partnership-public-images.jfrog.io/fluentd/fluentd:1.16.0"
      imagePullPolicy: "IfNotPresent"
      volumeMounts:
        - mountPath: "{{ .Values.artifactory.persistence.mountPath }}"
          name: artifactory-volume
      env:
        - name: JF_PRODUCT_DATA_INTERNAL
          value: {{ .Values.artifactory.persistence.mountPath }}
        - name: FLUENTD_CONF
          value: ../../../../{{ .Values.artifactory.persistence.mountPath }}/etc/fluentd/fluentd.conf
splunk:
  host: splunk.example.com
  port: 8088
  token: splunk_hec_token
  metrics_token: splunk_metrics_hec_token
  index: jfrog_splunk
  com_protocol: https
  insecure_ssl: false
jfrog:
  observability:
    metrics:
      jpd_url: jpd_url
      username: jfrog_user
      apikey: jfrog_api_key